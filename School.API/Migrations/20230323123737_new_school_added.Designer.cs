// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using School.API.Data;

#nullable disable

namespace School.API.Migrations
{
    [DbContext(typeof(ShcoolDbContext))]
    [Migration("20230323123737_new_school_added")]
    partial class new_school_added
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("School.API.Entities.Classes", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("Schoolid")
                        .HasColumnType("int");

                    b.Property<string>("class_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("students_count")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Schoolid");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("School.API.Entities.School", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("school_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("school");

                    b.HasData(
                        new
                        {
                            id = 1,
                            school_name = "124-School"
                        },
                        new
                        {
                            id = 2,
                            school_name = "123-School"
                        });
                });

            modelBuilder.Entity("School.API.Entities.Schools", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("region_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("school_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("schools");

                    b.HasData(
                        new
                        {
                            id = 1,
                            region_name = "Tashkent",
                            school_name = "124-School"
                        },
                        new
                        {
                            id = 2,
                            region_name = "Tashkent",
                            school_name = "123-School"
                        });
                });

            modelBuilder.Entity("School.API.Entities.Students", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Classesid")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("class_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Classesid");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Schoolodels.DTOS.SubjectsDTO", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("StudentsId")
                        .HasColumnType("int");

                    b.Property<string>("subject_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("techer_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("StudentsId");

                    b.ToTable("SubjectsDTO");
                });

            modelBuilder.Entity("School.API.Entities.Classes", b =>
                {
                    b.HasOne("School.API.Entities.School", null)
                        .WithMany("classes")
                        .HasForeignKey("Schoolid");
                });

            modelBuilder.Entity("School.API.Entities.Students", b =>
                {
                    b.HasOne("School.API.Entities.Classes", null)
                        .WithMany("students")
                        .HasForeignKey("Classesid");
                });

            modelBuilder.Entity("Schoolodels.DTOS.SubjectsDTO", b =>
                {
                    b.HasOne("School.API.Entities.Students", null)
                        .WithMany("subjects")
                        .HasForeignKey("StudentsId");
                });

            modelBuilder.Entity("School.API.Entities.Classes", b =>
                {
                    b.Navigation("students");
                });

            modelBuilder.Entity("School.API.Entities.School", b =>
                {
                    b.Navigation("classes");
                });

            modelBuilder.Entity("School.API.Entities.Students", b =>
                {
                    b.Navigation("subjects");
                });
#pragma warning restore 612, 618
        }
    }
}
